{
  "createdAt": "2025-10-22T18:20:20.342Z",
  "updatedAt": "2025-10-28T23:05:28.823Z",
  "id": "U44ZfEwFU77EUthb",
  "name": "sw_send_message_with_retry",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "instanceName"
            },
            {
              "name": "remoteJid"
            },
            {
              "name": "messageText"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2688,
        464
      ],
      "id": "4d89a479-acb2-4829-97c6-0812e6ad1b51",
      "name": "start"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.instanceName }}",
        "remoteJid": "={{ $('start').item.json.remoteJid }}",
        "messageText": "={{ $('start').item.json.messageText }}",
        "options_message": {
          "delay": "={{ 2000 }}"
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -2448,
        464
      ],
      "id": "d75f2f40-7abe-48e5-ad10-e9fd31a0eac1",
      "name": "Send Message",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first()?.json ?? {};\nconst data = response.data ?? {};\nconst statusRaw = String(data.status ?? response.status ?? 'UNKNOWN').toUpperCase();\nconst messageId = data.key?.id ?? null;\n\nconst successStatuses = new Set(['SUCCESS', 'SENT', 'DELIVERED']);\nconst transientStatuses = new Set(['PENDING', 'QUEUED', 'ACCEPTED']);\nconst successRaw = String(response.success ?? '').trim().toLowerCase();\n\nconst isSuccess = successStatuses.has(statusRaw) || (!data.status && (response.success === true || successRaw === 'true'));\nconst isTransient = transientStatuses.has(statusRaw);\nconst shouldRetry = isTransient || !isSuccess;\nconst errorMessage = data.error ?? response.error ?? null;\n\nreturn [{\n  json: {\n    success: isSuccess,\n    status: statusRaw,\n    shouldRetry,\n    isTransient,\n    messageId,\n    firstResponse: response,\n    lastResponse: response,\n    errorMessage\n  },\n  pairedItem: 0\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2208,
        464
      ],
      "id": "6891de20-ae7a-4d58-8508-3c29fe588083",
      "name": "Check Initial"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "leftValue": "={{ $json.shouldRetry }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              },
              "id": "1bd45bdc-98a6-4ea8-bd20-4204058af127"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1984,
        464
      ],
      "id": "6a3564c3-e09c-4378-bae5-1246aaacb883",
      "name": "Should Retry?"
    },
    {
      "parameters": {
        "amount": "={{ 2.5 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1728,
        336
      ],
      "id": "492e5aad-c37f-4479-ae1e-0a4d66234fbe",
      "name": "Retry Delay",
      "webhookId": "c70f06a7-7b09-46dc-9217-d26a00515d2d"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.instanceName }}",
        "remoteJid": "={{ $('start').item.json.remoteJid }}",
        "messageText": "={{ $('start').item.json.messageText }}",
        "options_message": {
          "delay": "={{ 2000 }}"
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1488,
        336
      ],
      "id": "6aad54fd-5a09-4fd5-a96e-07b1fd0753ab",
      "name": "Send Message (retry)",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first()?.json ?? {};\nconst data = response.data ?? {};\nconst statusRaw = String(data.status ?? response.status ?? 'UNKNOWN').toUpperCase();\nconst messageId = data.key?.id ?? null;\n\nconst successStatuses = new Set(['SUCCESS', 'SENT', 'DELIVERED']);\nconst transientStatuses = new Set(['PENDING', 'QUEUED', 'ACCEPTED']);\nconst successRaw = String(response.success ?? '').trim().toLowerCase();\n\nconst isSuccess = successStatuses.has(statusRaw) || (!data.status && (response.success === true || successRaw === 'true'));\nconst isTransient = transientStatuses.has(statusRaw);\nconst shouldRetry = isTransient || !isSuccess;\nconst errorMessage = data.error ?? response.error ?? null;\nconst firstContext = $('Check Initial').first()?.json ?? {};\n\nreturn [{\n  json: {\n    success: isSuccess,\n    status: statusRaw,\n    shouldRetry,\n    isTransient,\n    messageId,\n    firstResponse: firstContext.firstResponse ?? firstContext,\n    lastResponse: response,\n    errorMessage\n  },\n  pairedItem: 0\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1280,
        336
      ],
      "id": "905db196-6086-4826-87e6-3e5861af60dd",
      "name": "Check Retry"
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.success === true }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and",
          "options": {
            "typeValidation": "strict",
            "version": 2
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1056,
        336
      ],
      "id": "edb5a1cd-e64b-48ac-a3c0-3d213c04356f",
      "name": "Retry Success?"
    },
    {
      "parameters": {
        "jsCode": "const startData = $('start').first()?.json ?? {};\nconst initial = $('Check Initial').first()?.json ?? {};\nconst retry = $('Check Retry').first()?.json ?? {};\n\nreturn [{\n  json: {\n    message: 'Falha ao enviar mensagem ap√≥s tentativas via Evolution API.',\n    remoteJid: startData.remoteJid ?? null,\n    instanceName: startData.instanceName ?? null,\n    messageText: startData.messageText ?? null,\n    initial,\n    retry,\n    timestamp: new Date().toISOString()\n  }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -752,
        208
      ],
      "id": "b3c5efae-5338-4547-8bd5-625dea1dcbf9",
      "name": "Build Failure Report"
    },
    {
      "parameters": {
        "jsCode": "const payload = $input.first()?.json ?? {};\nthrow new Error(JSON.stringify(payload, null, 2));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -528,
        208
      ],
      "id": "776f85b5-a13e-4185-b208-96d6af3fa220",
      "name": "Raise Failure"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -240,
        544
      ],
      "id": "c1367bf5-baf1-43bd-9a5f-59490aa297a3",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "amount": "={{ 4 }}"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1728,
        560
      ],
      "id": "9fc4fda8-d08a-4ca9-9dca-120b61cbf535",
      "name": "Wait",
      "webhookId": "5c58e400-8855-497b-8c82-c4debfcfda55"
    }
  ],
  "connections": {
    "start": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Check Initial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Initial": {
      "main": [
        [
          {
            "node": "Should Retry?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Retry?": {
      "main": [
        [
          {
            "node": "Retry Delay",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry Delay": {
      "main": [
        [
          {
            "node": "Send Message (retry)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message (retry)": {
      "main": [
        [
          {
            "node": "Check Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Retry": {
      "main": [
        [
          {
            "node": "Retry Success?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry Success?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Build Failure Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Failure Report": {
      "main": [
        [
          {
            "node": "Raise Failure",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Raise Failure": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 120
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "start": [
      {
        "json": {
          "instanceName": "MindQuest",
          "remoteJid": "351932786582@s.whatsapp.net",
          "messageText": "Entendo, Aldo, √© super v√°lido querer explorar outras √°reas da sua vida e trazer novos assuntos para a conversa.\n\nFico feliz de saber que seu app tem um prop√≥sito transformador, isso mostra como voc√™ valoriza impacto real, n√£o s√≥ resultados. Esse cuidado reflete um lado muito importante seu, que quer mais significado no que faz.\n\nPensando em outras √°reas pessoais, que tal conversarmos um pouco sobre:\n\n‚Ä¢ Como voc√™ tem se sentido nas rela√ß√µes com as pessoas ao seu redor, al√©m dos seus filhos?\n\n‚Ä¢ Que momentos no seu dia a dia trazem mais calma ou prazer, mesmo que pequenos?\n\n‚Ä¢ Se pudesse dedicar um tempo s√≥ para voc√™, sem obriga√ß√µes, o que gostaria de fazer?\n\nQuero ajudar a encontrar um foco que fa√ßa sentido pra voc√™ hoje. Tem algo a√≠ que chama mais sua aten√ß√£o para a gente come√ßar? "
        }
      }
    ]
  },
  "versionId": "89575b04-9cce-40a2-bead-05f3031af7f7",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-22T18:20:20.342Z",
      "updatedAt": "2025-10-22T18:20:20.342Z",
      "role": "workflow:owner",
      "workflowId": "U44ZfEwFU77EUthb",
      "projectId": "u1M57XAwIiLpPwjp",
      "project": {
        "createdAt": "2025-09-16T16:13:20.606Z",
        "updatedAt": "2025-09-25T16:38:18.729Z",
        "id": "u1M57XAwIiLpPwjp",
        "name": "Aldo Santos <lindualdo@hotmail.com>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-16T16:13:20.606Z",
            "updatedAt": "2025-09-16T16:13:20.606Z",
            "userId": "fa864d51-475e-4765-b3b4-12788525a3e6",
            "projectId": "u1M57XAwIiLpPwjp",
            "user": {
              "createdAt": "2025-09-16T16:13:20.056Z",
              "updatedAt": "2025-10-29T08:00:03.799Z",
              "id": "fa864d51-475e-4765-b3b4-12788525a3e6",
              "email": "lindualdo@hotmail.com",
              "firstName": "Aldo",
              "lastName": "Santos",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-16T16:22:10.583Z",
                "personalization_survey_n8n_version": "1.108.1"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "jUAvu7DUAzyqZhJd",
                "userActivatedAt": 1758041156747,
                "easyAIWorkflowOnboarded": true,
                "dismissedCallouts": {
                  "preBuiltAgentsModalCallout": true
                },
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759918723295
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-29",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}