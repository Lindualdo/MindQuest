{
  "createdAt": "2025-09-30T11:31:35.749Z",
  "updatedAt": "2025-10-25T22:44:54.173Z",
  "id": "2LwxT1Pnnaheh10M",
  "name": "chat_onboarding",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "remoteJid"
            },
            {
              "name": "pushName"
            },
            {
              "name": "id"
            },
            {
              "name": "whatsapp_number"
            },
            {
              "name": "evolution_instancia"
            },
            {
              "name": "menssagem"
            }
          ]
        }
      },
      "id": "e46e918f-943e-4770-b14b-0f8b021df60f",
      "name": "start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -3488,
        80
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "sessionData",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}",
        "options": {}
      },
      "id": "a6b3b98b-3814-4379-852a-bf68b3e51597",
      "name": "Redis Get",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3264,
        80
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.item.json.sessionData; let s={}; try{ if(raw) s=JSON.parse(raw);}catch(e){s={};}\nconst estado = s.estado||'inicio';\nconst nome_preferido = s.nome_preferido||null; const nome_assistente = s.nome_assistente||null;\nlet interaction_count = (estado==='inicio')?1:(estado==='nome_coletado'?2:3);\nlet next_focus='', is_last_interaction=(interaction_count===3);\nif(interaction_count===1){ next_focus='ONBOARDING#1: Sauda√ß√£o curta + perguntar COMO QUER SER CHAMADO(A). Uma √∫nica pergunta.'; }\nif(interaction_count===2){ next_focus='ONBOARDING#2: Agrade√ßa e pe√ßa o NOME DO ASSISTENTE (ex.: Luna, Max, S√°bio). Uma √∫nica pergunta.'; }\nif(interaction_count===3){ next_focus='ONBOARDING#3 (FINAL): N√ÉO PERGUNTAR. S√≥ confirmar e encerrar; o sistema envia o link.'; }\nreturn { json: { estado, nome_preferido, nome_assistente, interaction_count, next_focus, is_last_interaction } };"
      },
      "id": "7ea7a884-75e5-4e03-995f-c068a2e9cfa4",
      "name": "Code - Controller (interations-style)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3072,
        80
      ]
    },
    {
      "parameters": {
        "mode": "insert",
        "messages": {
          "messageValues": [
            {
              "message": "=Sistema: Onboarding intera√ß√£o {{ $('Code - Controller (interations-style)').item.json.interaction_count }}. Foco: {{ $('Code - Controller (interations-style)').item.json.next_focus }}.",
              "hideFromUI": true
            }
          ]
        }
      },
      "id": "6b330c32-773b-4d82-adc0-17363a296ecc",
      "name": "Chat Memory - Insert",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3456,
        368
      ]
    },
    {
      "parameters": {
        "options": {
          "groupMessages": true
        }
      },
      "id": "124ec1d2-19b7-4003-a6af-8e9f03b33a36",
      "name": "Chat Memory - Get",
      "type": "@n8n/n8n-nodes-langchain.memoryManager",
      "typeVersion": 1.1,
      "position": [
        -3104,
        368
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# USER PROMPT - ONBOARDING MINDQUEST (interations-style)\n<contexto>\nMensagem do Usu√°rio: {{ $('start').item.json.menssagem }}\nEstado Atual: {{ $('Code - Controller (interations-style)').item.json.estado }}\nNome Preferido: {{ $('Code - Controller (interations-style)').item.json.nome_preferido }}\nNome Assistente: {{ $('Code - Controller (interations-style)').item.json.nome_assistente }}\n</contexto>\n<controle>\nInteraction: {{ $('Code - Controller (interations-style)').item.json.interaction_count }}\nnext_focus: {{ $('Code - Controller (interations-style)').item.json.next_focus }}\n√â √∫ltima intera√ß√£o: {{ $('Code - Controller (interations-style)').item.json.is_last_interaction }}\nREGRAS: Siga EXACTAMENTE o next_focus. N√£o adicione perguntas extras.\n</controle>\n<templates>\n1: \"Oi! üëã Bem-vindo ao MindQuest!\\n\\nVamos fazer seu cadastro r√°pido. S√£o s√≥ 2 perguntinhas e j√° liberamos tudo pra voc√™.\\n\\nComo voc√™ prefere ser chamado(a)?\"\n2: \"√ìtimo, [NOME]! Agora me d√° um nome. Pode ser: Luna, Coach, Max, S√°bio...\\n\\nComo quer me chamar?\"\n3: \"Perfeito! Vou finalizar seu acesso.\"\n</templates>",
        "options": {
          "systemMessage": "=# SYSTEM\n- Fale PT-BR.\n- Obede√ßa ao next_focus.\n- Se for a √∫ltima intera√ß√£o, n√£o pergunte.\n- Direto e cordial."
        }
      },
      "id": "a1457807-6681-416f-8e3e-f739dcf2affe",
      "name": "Agent AI (interations-style)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -2672,
        80
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "72437706-430a-4c94-9f7a-46ff2a6178b8",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -2720,
        368
      ],
      "credentials": {
        "openRouterApi": {
          "id": "rSnkOnnAHyfayLJt",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse Determin√≠stico ‚Äî mant√©m l√≥gica original + garante nome_usuario no final\nconst raw = $input.first().json.output || '';\nconst estado = $('Code - Controller (interations-style)').first().json.estado;\nconst msg = String($('start').first().json.menssagem || '').trim();\n\nlet out_text = String(raw).trim();\nlet nome_usuario = null;\nlet nome_assistente = null;\nlet proximo_estado = null;\nlet tipo = 'mensagem';\n\n// Fallback do Redis para nome_usuario (usado na fase 'completo')\nlet prev = {};\ntry { prev = JSON.parse($('Redis Get').first().json.sessionData || '{}'); } catch {}\nconst prevNome = (prev && typeof prev.nome_preferido === 'string') ? prev.nome_preferido.trim() : null;\n\nif (estado === 'inicio') {\n  proximo_estado = 'nome_coletado';\n  if (!out_text) {\n    out_text = 'Oi! üëã Bem-vindo ao MindQuest!\\n\\nVamos fazer seu cadastro r√°pido. S√£o s√≥ 2 perguntinhas e j√° liberamos tudo pra voc√™.\\n\\nComo voc√™ prefere ser chamado(a)?';\n  }\n}\nelse if (estado === 'nome_coletado') {\n  if (msg.length >= 2) {\n    nome_usuario = msg;\n    proximo_estado = 'completo';\n    if (!out_text) {\n      out_text = `√ìtimo, ${nome_usuario}! Agora me d√° um nome. Pode ser: Luna, Coach, Max, S√°bio...\\n\\nComo quer me chamar?`;\n    }\n  } else {\n    proximo_estado = 'nome_coletado';\n    if (!out_text) {\n      out_text = 'Vamos l√°! Como voc√™ prefere ser chamado(a)? (m√≠nimo 2 letras)';\n    }\n  }\n}\nelse { // estado === 'completo'\n  // GARANTE nome_usuario usando o que j√° est√° no Redis\n  if (!nome_usuario && prevNome && prevNome.length >= 2) {\n    nome_usuario = prevNome;\n  }\n  if (msg.length >= 2) {\n    nome_assistente = msg;\n    proximo_estado = 'completo';\n    tipo = 'finalizado';\n  } else {\n    proximo_estado = 'completo';\n    if (!out_text) {\n      out_text = 'Quase l√°! Diga o nome do assistente (ex.: Luna, Max, S√°bio) ‚Äî m√≠nimo 2 letras.';\n    }\n  }\n}\n\n// Fallback de seguran√ßa (somente se n√£o finalizado)\nif (!out_text && tipo !== 'finalizado') {\n  out_text = 'Vamos continuar. Como voc√™ prefere ser chamado(a)?';\n}\n\nreturn { json: { tipo, texto: out_text, proximo_estado, nome_usuario, nome_assistente } };\n"
      },
      "id": "3c1a13ab-d04b-4327-aec9-962e3d659f12",
      "name": "Code - Parse Determin√≠stico",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2304,
        80
      ]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "finalizado",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and",
          "options": {
            "caseSensitive": true,
            "typeValidation": "strict",
            "version": 1
          }
        },
        "options": {}
      },
      "id": "b7bdbce0-7c9e-48fd-8519-b2b03b4938ed",
      "name": "IF Finalizado",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -2112,
        80
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.evolution_instancia }}",
        "remoteJid": "={{ $('start').item.json.whatsapp_number }}",
        "messageText": "={{ $('Code - Parse Determin√≠stico').item.json.texto }}",
        "options_message": {
          "delay": 1200
        }
      },
      "id": "49e736d8-6fb4-4407-b8a7-3b01fc3da8b0",
      "name": "Send Message",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1872,
        208
      ],
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const r = $('Send Message').item.json||{}; const success = r.success===true; const status = r?.data?.status || r?.status || 'UNKNOWN';\nconst shouldRetry = (!success) || (status==='ERROR');\nreturn { json: { success, status, shouldRetry } };"
      },
      "id": "e50df075-b516-4cb5-824c-435f03c88a50",
      "name": "Eval Retry Intermedi√°ria",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1664,
        208
      ]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.shouldRetry }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and",
          "options": {
            "typeValidation": "loose",
            "version": 1
          }
        },
        "options": {}
      },
      "id": "fe969c09-aadf-44bb-800f-d845e4e93cb4",
      "name": "IF Should Retry (Mid)?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1472,
        208
      ]
    },
    {
      "parameters": {
        "amount": 8,
        "unit": "seconds"
      },
      "id": "9e1ab07f-03aa-45c3-9430-05fe393b8785",
      "name": "Wait 8s (Mid)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -1264,
        112
      ],
      "webhookId": "9952c346-ce73-47aa-b59c-904123176b15"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.evolution_instancia }}",
        "remoteJid": "={{ $('start').item.json.whatsapp_number }}",
        "messageText": "={{ $('Code - Parse Determin√≠stico').item.json.texto }}",
        "options_message": {
          "delay": 800
        }
      },
      "id": "9a999deb-12de-4618-9092-e21be7bb4320",
      "name": "Send Message (retry mid)",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1072,
        112
      ],
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}",
        "value": "={{ ( () => { const prev = $('Redis Get').first().json.sessionData?JSON.parse($('Redis Get').first().json.sessionData):{}; const ai=$('Code - Parse Determin√≠stico').first().json; const allowed=['inicio','nome_coletado','completo']; const next=(ai.proximo_estado&&allowed.includes(ai.proximo_estado))?ai.proximo_estado:(prev.estado||'inicio'); const nome_usuario=ai.nome_usuario||prev.nome_preferido||null; const nome_assistente=ai.nome_assistente||prev.nome_assistente||null; return JSON.stringify({ nome_preferido:nome_usuario, nome_assistente:nome_assistente, estado:next }); })() }}",
        "expire": true,
        "ttl": 86400
      },
      "id": "95572c47-27f5-40b8-b538-37686754e083",
      "name": "Redis Update",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -832,
        224
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO usuarios (\n  whatsapp_numero, nome, nome_preferencia, nome_assistente, token_acesso, token_expira_em, status_onboarding\n) VALUES (\n  $1, $2, $3, $4,\n  gen_random_uuid() || $5 || EXTRACT(EPOCH FROM CURRENT_TIMESTAMP)::bigint,\n  CURRENT_TIMESTAMP + INTERVAL '15 days',\n  'completo')\nRETURNING id, token_acesso, whatsapp_numero, nome_preferencia, nome_assistente;",
        "options": {
          "queryReplacement": "={{ [ $('start').first().json.whatsapp_number, $('start').item.json.pushName, $('Code - Parse Determin√≠stico').item.json.nome_usuario, $('Code - Parse Determin√≠stico').item.json.nome_assistente, $('start').item.json.id ] }}"
        }
      },
      "id": "b54cca9e-3756-44b9-ba4f-d39ef7f6ac9e",
      "name": "Insert User",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1872,
        -80
      ],
      "credentials": {
        "postgres": {
          "id": "8ySWxtSO7gYK5uue",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO gamificacao (usuario_id, xp_total, nivel_atual, xp_proximo_nivel, titulo_nivel, streak_conversas_dias, streak_protecao_usada, quest_diaria_status, quest_diaria_progresso, quest_diaria_descricao, quest_diaria_data, conquistas_desbloqueadas, total_conversas, total_reflexoes, melhor_streak)\nVALUES ($1::uuid, 0, 1, 200, 'Explorador', 0, false, 'pendente', 0, 'D√™ o primeiro passo: inicie sua primeira conversa comigo!', CURRENT_DATE, '[]'::jsonb, 0, 0, 0);",
        "options": {
          "queryReplacement": "={{ [$json.id] }}"
        }
      },
      "id": "cb500ca1-e77f-4005-8821-b4a43d0b7d3c",
      "name": "Insert Gamif",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1664,
        -80
      ],
      "credentials": {
        "postgres": {
          "id": "8ySWxtSO7gYK5uue",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let nomeAssistente; try{ const a=JSON.parse($('Agent AI (interations-style)').first().json.output||'{}'); nomeAssistente=a.nome_assistente; }catch{}\nif(!nomeAssistente){ nomeAssistente=$('Code - Parse Determin√≠stico').first().json.nome_assistente||'Assistente'; }\nconst token = $('Insert User').first().json.token_acesso;\nconst url = `https://mindquest.pt/auth?token=${token}`;\nconst mensagem = `Perfeito! Sou ${nomeAssistente} agora üòä\\n\\nPronto! üéâ\\n\\nüìä Sua experi√™ncia j√° foi criada: ${url}\\n\\nüîí Acesso seguro: Esse link j√° cont√©m seu token de autentica√ß√£o pessoal. N√£o precisa criar senha ou login, √© s√≥ clicar e entrar!\\n\\nE tamb√©m, voc√™ j√° pode mandar seu texto ou audio agora.\\n\\nO que deseja me contar sobre voc√™ hoje?`;\nreturn { json: { mensagem } };"
      },
      "id": "76808fba-cf17-4bb4-b67a-5ee1aeb418c0",
      "name": "monta link para usuario",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1472,
        -80
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.evolution_instancia }}",
        "remoteJid": "={{ $('start').item.json.whatsapp_number }}",
        "messageText": "={{ $json.mensagem }}",
        "options_message": {
          "delay": 1200
        }
      },
      "id": "415d8ce0-5408-42f8-92ca-23600590ab70",
      "name": "msg final",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -1264,
        -80
      ],
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const r = $('msg final').item.json || {};\nconst success = r.success === true;\nconst status = r?.data?.status || r?.status || 'UNKNOWN';\nconst shouldRetry = (!success) || (status === 'ERROR');\nreturn { json: { success, status, shouldRetry } };"
      },
      "id": "efc1acd0-9faa-4a41-8a60-b890a72e3acb",
      "name": "Eval Retry Final (simples)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1072,
        -80
      ]
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.shouldRetry }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and",
          "options": {
            "typeValidation": "loose",
            "version": 1
          }
        },
        "options": {}
      },
      "id": "874e39e6-c1d5-4f25-8a4b-e33b219642a9",
      "name": "IF Should Retry? (final)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -864,
        -80
      ]
    },
    {
      "parameters": {
        "amount": 8,
        "unit": "seconds"
      },
      "id": "41c6b7fe-3719-450d-bc64-0cc56227eb5d",
      "name": "Wait 8s (before retry final)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -672,
        -160
      ],
      "webhookId": "50c43236-cdfe-4d6d-8546-405b15261509"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.evolution_instancia }}",
        "remoteJid": "={{ $('start').item.json.whatsapp_number }}",
        "messageText": "={{ $('monta link para usuario').item.json.mensagem }}",
        "options_message": {
          "delay": 800
        }
      },
      "id": "792cbc82-cd90-451f-8a20-ca28fce45f4d",
      "name": "msg final (retry)",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        -464,
        -160
      ],
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "amount": 2,
        "unit": "seconds"
      },
      "id": "5323aa7d-5315-4e8a-9797-9c7296471567",
      "name": "Wait 2s (flush final)",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        -176,
        0
      ],
      "webhookId": "f3224c77-2f2e-4967-9940-6999bd2bcac4"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}"
      },
      "id": "79d8e79e-ac07-4d87-a0b3-01da56d66376",
      "name": "Redis Delete",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -16,
        0
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('start').first().json.evolution_instancia }}{{ $('start').first().json.whatsapp_number }}",
        "sessionTTL": 86400,
        "contextWindowLength": 20
      },
      "id": "3d9b92f6-f3a3-4d57-8e7f-343e60f83085",
      "name": "Redis Chat Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        -2528,
        384
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('start').first().json.evolution_instancia }}{{ $('start').first().json.whatsapp_number }}",
        "sessionTTL": 86400,
        "contextWindowLength": 20
      },
      "id": "f3888e70-814d-4187-86e0-9c32e21fdc6f",
      "name": "Redis Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        -3264,
        608
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    }
  ],
  "connections": {
    "start": {
      "main": [
        [
          {
            "node": "Redis Get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Get": {
      "main": [
        [
          {
            "node": "Code - Controller (interations-style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory - Insert": {
      "main": [
        [
          {
            "node": "Chat Memory - Get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Memory - Get": {
      "main": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code - Controller (interations-style)": {
      "main": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent AI (interations-style)": {
      "main": [
        [
          {
            "node": "Code - Parse Determin√≠stico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Parse Determin√≠stico": {
      "main": [
        [
          {
            "node": "IF Finalizado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Finalizado": {
      "main": [
        [
          {
            "node": "Insert User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Eval Retry Intermedi√°ria",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eval Retry Intermedi√°ria": {
      "main": [
        [
          {
            "node": "IF Should Retry (Mid)?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Should Retry (Mid)?": {
      "main": [
        [
          {
            "node": "Wait 8s (Mid)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 8s (Mid)": {
      "main": [
        [
          {
            "node": "Send Message (retry mid)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message (retry mid)": {
      "main": [
        [
          {
            "node": "Redis Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert User": {
      "main": [
        [
          {
            "node": "Insert Gamif",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Gamif": {
      "main": [
        [
          {
            "node": "monta link para usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "monta link para usuario": {
      "main": [
        [
          {
            "node": "msg final",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "msg final": {
      "main": [
        [
          {
            "node": "Eval Retry Final (simples)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Eval Retry Final (simples)": {
      "main": [
        [
          {
            "node": "IF Should Retry? (final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Should Retry? (final)": {
      "main": [
        [
          {
            "node": "Wait 8s (before retry final)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 2s (flush final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 8s (before retry final)": {
      "main": [
        [
          {
            "node": "msg final (retry)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "msg final (retry)": {
      "main": [
        [
          {
            "node": "Wait 2s (flush final)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 2s (flush final)": {
      "main": [
        [
          {
            "node": "Redis Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Chat Memory - Insert",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Chat Memory - Get",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "start": [
      {
        "json": {
          "remoteJid": "5512982389360@s.whatsapp.net",
          "pushName": "Aldo",
          "id": "3A673E70659B7A9B5BA6",
          "whatsapp_number": "5512982389360",
          "evolution_instancia": "MindQuest",
          "menssagem": "Yoda"
        }
      }
    ]
  },
  "versionId": "bb4435b6-b623-4ec7-b5a4-3a632d7dc1db",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-30T11:31:35.749Z",
      "updatedAt": "2025-09-30T11:31:35.749Z",
      "role": "workflow:owner",
      "workflowId": "2LwxT1Pnnaheh10M",
      "projectId": "u1M57XAwIiLpPwjp",
      "project": {
        "createdAt": "2025-09-16T16:13:20.606Z",
        "updatedAt": "2025-09-25T16:38:18.729Z",
        "id": "u1M57XAwIiLpPwjp",
        "name": "Aldo Santos <lindualdo@hotmail.com>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-16T16:13:20.606Z",
            "updatedAt": "2025-09-16T16:13:20.606Z",
            "userId": "fa864d51-475e-4765-b3b4-12788525a3e6",
            "projectId": "u1M57XAwIiLpPwjp",
            "user": {
              "createdAt": "2025-09-16T16:13:20.056Z",
              "updatedAt": "2025-10-26T07:40:32.710Z",
              "id": "fa864d51-475e-4765-b3b4-12788525a3e6",
              "email": "lindualdo@hotmail.com",
              "firstName": "Aldo",
              "lastName": "Santos",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-16T16:22:10.583Z",
                "personalization_survey_n8n_version": "1.108.1"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "jUAvu7DUAzyqZhJd",
                "userActivatedAt": 1758041156747,
                "easyAIWorkflowOnboarded": true,
                "dismissedCallouts": {
                  "preBuiltAgentsModalCallout": true
                },
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759918723295
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-26",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}