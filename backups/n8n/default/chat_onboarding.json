{
  "createdAt": "2025-09-30T11:31:35.749Z",
  "updatedAt": "2025-10-27T11:28:32.827Z",
  "id": "2LwxT1Pnnaheh10M",
  "name": "chat_onboarding",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "remoteJid"
            },
            {
              "name": "pushName"
            },
            {
              "name": "id"
            },
            {
              "name": "whatsapp_number"
            },
            {
              "name": "evolution_instancia"
            },
            {
              "name": "menssagem"
            }
          ]
        }
      },
      "id": "451aa87d-5493-4c2b-9753-be1c5be1d70f",
      "name": "start",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2224,
        0
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "sessionData",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}",
        "options": {}
      },
      "id": "01137af4-b725-423f-aa77-5968d3dd7283",
      "name": "Redis Get",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -2000,
        0
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const raw = $input.item.json.sessionData; let s={}; try{ if(raw) s=JSON.parse(raw);}catch(e){s={};}\nconst estado = s.estado||'inicio';\nconst nome_preferido = s.nome_preferido||null; const nome_assistente = s.nome_assistente||null; const faixa_etaria = s.faixa_etaria||null;\nlet interaction_count;\nif(estado==='inicio'){ interaction_count=1; }\nelse if(estado==='nome_coletado'){ interaction_count=2; }\nelse if(estado==='assistente_pendente'){ interaction_count=3; }\nelse { interaction_count=4; }\nlet next_focus='', is_last_interaction=(interaction_count===4);\nif(interaction_count===1){ next_focus='ONBOARDING#1: Sauda√ß√£o curta + perguntar COMO QUER SER CHAMADO(A). Uma √∫nica pergunta.'; }\nif(interaction_count===2){ next_focus='ONBOARDING#2: Agrade√ßa e pe√ßa o NOME DO ASSISTENTE (ex.: Luna, Max, S√°bio). Uma √∫nica pergunta.'; }\nif(interaction_count===3){ next_focus='ONBOARDING#3: Coletar FAIXA ET√ÅRIA. Liste as op√ß√µes 1 a 7 e instrua a responder s√≥ com o n√∫mero.'; }\nif(interaction_count===4){ next_focus='ONBOARDING#4 (FINAL): N√ÉO PERGUNTAR. S√≥ confirmar e encerrar; o sistema envia o link.'; }\nreturn { json: { estado, nome_preferido, nome_assistente, faixa_etaria, interaction_count, next_focus, is_last_interaction } };"
      },
      "id": "1aa3e2a0-a74f-4a1f-830b-995393a72420",
      "name": "Code - Controller (interations-style)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1808,
        0
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# USER PROMPT - ONBOARDING MINDQUEST (interations-style)\n\n<contexto>\nMensagem do Usu√°rio: {{ $('start').item.json.menssagem }}\nEstado Atual: {{ $('Code - Controller (interations-style)').item.json.estado }}\nNome Preferido: {{ $('Code - Controller (interations-style)').item.json.nome_preferido }}\nNome Assistente: {{ $('Code - Controller (interations-style)').item.json.nome_assistente }}\n</contexto>\n\n<controle>\nInteraction: {{ $('Code - Controller (interations-style)').item.json.interaction_count }}\nnext_focus: {{ $('Code - Controller (interations-style)').item.json.next_focus }}\n√â √∫ltima intera√ß√£o: {{ $('Code - Controller (interations-style)').item.json.is_last_interaction }}\nREGRAS: Siga EXACTAMENTE o next_focus. N√£o adicione perguntas extras. Quando pedir a faixa et√°ria, liste as op√ß√µes de 1 a 7 e pe√ßa para o usu√°rio responder apenas com o n√∫mero correspondente.\n</controle>\n\n<templates>\n1: \"Oi! üëã Que bom ter voc√™ aqui no MindQuest!\\n\\nVamos come√ßar criando o seu espa√ßo pessoal. √â rapidinho, prometo ‚Äî s√£o s√≥ 3 perguntas pra eu te conhecer melhor e ajustar tudo √† sua forma de pensar.\\n\\nComo voc√™ prefere ser chamado(a)?\"\n2: \"Perfeito, [NOME]! Agora preciso de um toque seu: qual nome voc√™ quer me dar? Pode escolher algo que combine com a nossa vibe ‚Äî tipo Luna, Coach, Max, S√°bio... ou qualquer outro que voc√™ quiser üòä\"\n3: \"Adorei, [NOME]! Pra deixar tudo mais personalizado, me conta sua faixa et√°ria. Responda apenas com o n√∫mero correspondente:\\n\\n1Ô∏è‚É£ 13 a 17 anos\\n2Ô∏è‚É£ 18 a 24 anos\\n3Ô∏è‚É£ 25 a 34 anos\\n4Ô∏è‚É£ 35 a 44 anos\\n5Ô∏è‚É£ 45 a 54 anos\\n6Ô∏è‚É£ 55 a 64 anos\\n7Ô∏è‚É£ 65 anos ou mais\"\n4: \"Perfeito, [NOME]! üß†‚ú® Seu cadastro est√° finalizado.\\n\\nAgora √© s√≥ relaxar ‚Äî sua jornada com o MindQuest come√ßa oficialmente. Tudo o que voc√™ compartilhar daqui pra frente vai servir pra deixar suas conversas, insights e recomenda√ß√µes cada vez mais alinhadas com quem voc√™ √©.\"\n</templates>\n",
        "options": {
          "systemMessage": "=# SYSTEM\n- Fale PT-BR.\n- Obede√ßa ao next_focus.\n- Se for a √∫ltima intera√ß√£o, n√£o pergunte.\n- Direto e cordial."
        }
      },
      "id": "d2f61932-9ddb-466f-9fec-37a6aa09d667",
      "name": "Agent AI (interations-style)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1536,
        0
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d2548b77-9f95-4bfe-95f5-ed4b23c6f171",
      "name": "OpenRouter Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -1584,
        304
      ],
      "credentials": {
        "openRouterApi": {
          "id": "rSnkOnnAHyfayLJt",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Parse Determin√≠stico ‚Äî mant√©m l√≥gica original + garante nome_usuario no final\nconst raw = $input.first().json.output || '';\nconst estado = $('Code - Controller (interations-style)').first().json.estado;\nconst msg = String($('start').first().json.menssagem || '').trim();\n\nlet out_text = String(raw).trim();\nlet nome_usuario = null;\nlet nome_assistente = null;\nlet faixa_etaria = null;\nlet faixa_etaria_codigo = null;\nlet proximo_estado = null;\nlet tipo = 'mensagem';\n\n// Fallback do Redis para dados j√° coletados\nlet prev = {};\ntry { prev = JSON.parse($('Redis Get').first().json.sessionData || '{}'); } catch {}\nconst prevNome = (prev && typeof prev.nome_preferido === 'string') ? prev.nome_preferido.trim() : null;\nconst prevAssistente = (prev && typeof prev.nome_assistente === 'string') ? prev.nome_assistente.trim() : null;\nconst prevFaixa = (prev && typeof prev.faixa_etaria === 'string') ? prev.faixa_etaria : null;\n\nconst ageOptions = {\n  '1': '13-17',\n  '2': '18-24',\n  '3': '25-34',\n  '4': '35-44',\n  '5': '45-54',\n  '6': '55-64',\n  '7': '65+',\n};\n\nif (estado === 'inicio') {\n  proximo_estado = 'nome_coletado';\n  if (!out_text) {\n    out_text = 'Oi! üëã Bem-vindo ao MindQuest!\\n\\nVamos fazer seu cadastro r√°pido. S√£o s√≥ 3 perguntinhas e j√° liberamos tudo pra voc√™.\\n\\nComo voc√™ prefere ser chamado(a)?';\n  }\n}\nelse if (estado === 'nome_coletado') {\n  if (msg.length >= 2) {\n    nome_usuario = msg;\n    proximo_estado = 'assistente_pendente';\n    if (!out_text) {\n      out_text = `√ìtimo, ${nome_usuario}! Agora me d√° um nome. Pode ser: Luna, Coach, Max, S√°bio...\\n\\nComo quer me chamar?`;\n    }\n  } else {\n    proximo_estado = 'nome_coletado';\n    if (!out_text) {\n      out_text = 'Vamos l√°! Como voc√™ prefere ser chamado(a)? (m√≠nimo 2 letras)';\n    }\n  }\n}\nelse if (estado === 'assistente_pendente') {\n  if (!nome_usuario && prevNome && prevNome.length >= 2) {\n    nome_usuario = prevNome;\n  }\n  if (msg.length >= 2) {\n    nome_assistente = msg;\n    proximo_estado = 'faixa_pendente';\n    if (!out_text) {\n      const referencia = (nome_usuario && nome_usuario.length >= 2) ? `Perfeito, ${nome_usuario}` : 'Perfeito';\n      out_text = `${referencia}! Me diz sua faixa et√°ria? Responda s√≥ com o n√∫mero correspondente:\\n1: 13-17\\n2: 18-24\\n3: 25-34\\n4: 35-44\\n5: 45-54\\n6: 55-64\\n7: 65+`;\n    }\n  } else {\n    proximo_estado = 'assistente_pendente';\n    if (!out_text) {\n      out_text = 'Quase l√°! Diga o nome do assistente (ex.: Luna, Max, S√°bio) ‚Äî m√≠nimo 2 letras.';\n    }\n  }\n}\nelse if (estado === 'faixa_pendente') {\n  if (!nome_usuario && prevNome && prevNome.length >= 2) {\n    nome_usuario = prevNome;\n  }\n  if (!nome_assistente && prevAssistente && prevAssistente.length >= 2) {\n    nome_assistente = prevAssistente;\n  }\n  const match = msg.match(/^\\s*([1-7])\\s*$/);\n  if (match) {\n    faixa_etaria_codigo = match[1];\n    faixa_etaria = ageOptions[faixa_etaria_codigo];\n    proximo_estado = 'completo';\n    tipo = 'finalizado';\n    if (!out_text) {\n      out_text = 'Perfeito! Vou finalizar seu acesso.';\n    }\n  } else {\n    proximo_estado = 'faixa_pendente';\n    if (!out_text) {\n      out_text = 'Para concluir, responda com o n√∫mero da sua faixa et√°ria:\\n1: 13-17\\n2: 18-24\\n3: 25-34\\n4: 35-44\\n5: 45-54\\n6: 55-64\\n7: 65+';\n    }\n  }\n}\nelse {\n  proximo_estado = 'nome_coletado';\n  if (!out_text) {\n    out_text = 'Vamos l√°! Como voc√™ prefere ser chamado(a)?';\n  }\n}\n\nif (!nome_usuario && prevNome && prevNome.length >= 2) {\n  nome_usuario = prevNome;\n}\nif (!nome_assistente && prevAssistente && prevAssistente.length >= 2) {\n  nome_assistente = prevAssistente;\n}\nif (!faixa_etaria && prevFaixa) {\n  faixa_etaria = prevFaixa;\n}\n\n// Fallback de seguran√ßa (somente se n√£o finalizado)\nif (!out_text && tipo !== 'finalizado') {\n  out_text = 'Vamos continuar. Como voc√™ prefere ser chamado(a)?';\n}\n\nreturn { json: { tipo, texto: out_text, proximo_estado, nome_usuario, nome_assistente, faixa_etaria, faixa_etaria_codigo } };\n"
      },
      "id": "5ece050a-56d8-4c0c-bd62-ebb2553b0c75",
      "name": "Code - Parse Determin√≠stico",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1168,
        0
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "leftValue": "={{ $json.tipo }}",
              "rightValue": "finalizado",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "id": "0531552e-c58e-4386-a7c8-0fe2f618b330"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "38177078-dfcf-437f-9f6d-f10285fbf99c",
      "name": "IF Finalizado",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -976,
        0
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}",
        "value": "={{ ( () => { const prev = $('Redis Get').first().json.sessionData?JSON.parse($('Redis Get').first().json.sessionData):{}; const ai=$('Code - Parse Determin√≠stico').first().json; const allowed=['inicio','nome_coletado','assistente_pendente','faixa_pendente','completo']; const next=(ai.proximo_estado&&allowed.includes(ai.proximo_estado))?ai.proximo_estado:(prev.estado||'inicio'); const nome_usuario=ai.nome_usuario||prev.nome_preferido||null; const nome_assistente=ai.nome_assistente||prev.nome_assistente||null; const faixa_etaria=ai.faixa_etaria||prev.faixa_etaria||null; return JSON.stringify({ nome_preferido:nome_usuario, nome_assistente:nome_assistente, faixa_etaria:faixa_etaria, estado:next }); })() }}",
        "expire": true,
        "ttl": 86400
      },
      "id": "71ca2ae8-625a-4601-b453-ab18c25456e1",
      "name": "Redis Update",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -512,
        96
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO usuarios (\n  whatsapp_numero, nome, nome_preferencia, nome_assistente, token_acesso, token_expira_em, status_onboarding, faixa_etaria\n) VALUES (\n  $1, $2, $3, $4,\n  gen_random_uuid() || $5 || EXTRACT(EPOCH FROM CURRENT_TIMESTAMP)::bigint,\n  CURRENT_TIMESTAMP + INTERVAL '15 days',\n  'completo',$6)\nRETURNING id, token_acesso, whatsapp_numero, nome_preferencia, nome_assistente;",
        "options": {
          "queryReplacement": "={{ [ $('start').first().json.whatsapp_number, $('start').item.json.pushName, $('Code - Parse Determin√≠stico').item.json.nome_usuario, $('Code - Parse Determin√≠stico').item.json.nome_assistente, $('start').item.json.id, $('Code - Parse Determin√≠stico').item.json.faixa_etaria ] }}"
        }
      },
      "id": "d83eee51-4343-4819-b971-4e6e107c8ba7",
      "name": "Insert User",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -736,
        -160
      ],
      "credentials": {
        "postgres": {
          "id": "8ySWxtSO7gYK5uue",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO gamificacao (usuario_id, xp_total, nivel_atual, xp_proximo_nivel, titulo_nivel, streak_conversas_dias, streak_protecao_usada, quest_diaria_status, quest_diaria_progresso, quest_diaria_descricao, quest_diaria_data, conquistas_desbloqueadas, total_conversas, total_reflexoes, melhor_streak)\nVALUES ($1::uuid, 0, 1, 200, 'Explorador', 0, false, 'pendente', 0, 'D√™ o primeiro passo: inicie sua primeira conversa comigo!', CURRENT_DATE, '[]'::jsonb, 0, 0, 0);",
        "options": {
          "queryReplacement": "={{ [$json.id] }}"
        }
      },
      "id": "94e12cb4-f62b-4c47-9f16-b98b303b7e60",
      "name": "Insert Gamif",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -528,
        -160
      ],
      "credentials": {
        "postgres": {
          "id": "8ySWxtSO7gYK5uue",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "let nomeAssistente; try{ const a=JSON.parse($('Agent AI (interations-style)').first().json.output||'{}'); nomeAssistente=a.nome_assistente; }catch{}\nif(!nomeAssistente){ nomeAssistente=$('Code - Parse Determin√≠stico').first().json.nome_assistente||'Assistente'; }\nconst token = $('Insert User').first().json.token_acesso;\nconst url = `https://mindquest.pt/auth?token=${token}`;\nconst mensagem = `Perfeito! Sou ${nomeAssistente} agora üòä\\n\\nPronto! üéâ\\n\\nüìä Sua experi√™ncia j√° foi criada: ${url}\\n\\nüîí Acesso seguro: Esse link j√° cont√©m seu token de autentica√ß√£o pessoal. N√£o precisa criar senha ou login, √© s√≥ clicar e entrar!\\n\\n Recomendo voc√™ dar uma olhada no guia r√°pido a partir do link abaixo, para aproveitar melhor seu assitente:\\n\\n www.mindquest.pt/suporte/conversation-guide\\n\\n Se quiser come√ßar agora, voc√™ j√° pode mandar seu texto ou audio.\\n\\nO que deseja me contar sobre voc√™ hoje?`;\nreturn { json: { mensagem } };"
      },
      "id": "2ee4f061-f111-4038-a999-73d60509a9c4",
      "name": "monta link para usuario",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -336,
        -160
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('start').first().json.evolution_instancia }}{{ $('start').first().json.whatsapp_number }}",
        "sessionTTL": 86400,
        "contextWindowLength": 20
      },
      "id": "28811847-4f3f-4980-bcf5-7c9c22beef1b",
      "name": "Redis Chat Memory1",
      "type": "@n8n/n8n-nodes-langchain.memoryRedisChat",
      "typeVersion": 1.5,
      "position": [
        -1392,
        288
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "U44ZfEwFU77EUthb",
          "mode": "list",
          "cachedResultUrl": "/workflow/U44ZfEwFU77EUthb",
          "cachedResultName": "sw_send_message_with_retry"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "messageText": "={{ $json.mensagem }}",
            "remoteJid": "={{ $('start').item.json.remoteJid }}",
            "instanceName": "={{ $('start').item.json.evolution_instancia }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "instanceName",
              "displayName": "instanceName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "remoteJid",
              "displayName": "remoteJid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "messageText",
              "displayName": "messageText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -128,
        -160
      ],
      "id": "7b57c632-1aaf-417d-96aa-7ddc8348fb7b",
      "name": "Call 'sw_send_message_with_retry'"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "U44ZfEwFU77EUthb",
          "mode": "list",
          "cachedResultUrl": "/workflow/U44ZfEwFU77EUthb",
          "cachedResultName": "sw_send_message_with_retry"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "messageText": "={{ $('Code - Parse Determin√≠stico').item.json.texto }}",
            "remoteJid": "={{ $('start').item.json.remoteJid }}",
            "instanceName": "={{ $('start').item.json.evolution_instancia }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "instanceName",
              "displayName": "instanceName",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "remoteJid",
              "displayName": "remoteJid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "messageText",
              "displayName": "messageText",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [
        -736,
        96
      ],
      "id": "a94d4c43-40ff-4a03-af74-7a220af4608b",
      "name": "Call 'sw_send_message_with_retry'1"
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "=onboarding:{{ $('start').first().json.whatsapp_number }}"
      },
      "id": "1409504e-9d72-4325-a40a-b314abb1a28a",
      "name": "Redis Delete",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        80,
        -160
      ],
      "credentials": {
        "redis": {
          "id": "PB4zpLy1jLXDEzmH",
          "name": "Redis account"
        }
      }
    }
  ],
  "connections": {
    "start": {
      "main": [
        [
          {
            "node": "Redis Get",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Get": {
      "main": [
        [
          {
            "node": "Code - Controller (interations-style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code - Controller (interations-style)": {
      "main": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent AI (interations-style)": {
      "main": [
        [
          {
            "node": "Code - Parse Determin√≠stico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code - Parse Determin√≠stico": {
      "main": [
        [
          {
            "node": "IF Finalizado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Finalizado": {
      "main": [
        [
          {
            "node": "Insert User",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Call 'sw_send_message_with_retry'1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert User": {
      "main": [
        [
          {
            "node": "Insert Gamif",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Gamif": {
      "main": [
        [
          {
            "node": "monta link para usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "monta link para usuario": {
      "main": [
        [
          {
            "node": "Call 'sw_send_message_with_retry'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "Agent AI (interations-style)",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Call 'sw_send_message_with_retry'": {
      "main": [
        [
          {
            "node": "Redis Delete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call 'sw_send_message_with_retry'1": {
      "main": [
        [
          {
            "node": "Redis Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "start": [
      {
        "json": {
          "remoteJid": "5512982389360@s.whatsapp.net",
          "pushName": "Aldo",
          "id": "3A544CF9530268200864",
          "whatsapp_number": "5512982389360",
          "evolution_instancia": "MindQuest",
          "menssagem": "S√°bio"
        }
      }
    ]
  },
  "versionId": "133f00ce-3c10-4051-8626-7ffffbe57d33",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-30T11:31:35.749Z",
      "updatedAt": "2025-09-30T11:31:35.749Z",
      "role": "workflow:owner",
      "workflowId": "2LwxT1Pnnaheh10M",
      "projectId": "u1M57XAwIiLpPwjp",
      "project": {
        "createdAt": "2025-09-16T16:13:20.606Z",
        "updatedAt": "2025-09-25T16:38:18.729Z",
        "id": "u1M57XAwIiLpPwjp",
        "name": "Aldo Santos <lindualdo@hotmail.com>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-16T16:13:20.606Z",
            "updatedAt": "2025-09-16T16:13:20.606Z",
            "userId": "fa864d51-475e-4765-b3b4-12788525a3e6",
            "projectId": "u1M57XAwIiLpPwjp",
            "user": {
              "createdAt": "2025-09-16T16:13:20.056Z",
              "updatedAt": "2025-10-28T08:05:25.511Z",
              "id": "fa864d51-475e-4765-b3b4-12788525a3e6",
              "email": "lindualdo@hotmail.com",
              "firstName": "Aldo",
              "lastName": "Santos",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-16T16:22:10.583Z",
                "personalization_survey_n8n_version": "1.108.1"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "jUAvu7DUAzyqZhJd",
                "userActivatedAt": 1758041156747,
                "easyAIWorkflowOnboarded": true,
                "dismissedCallouts": {
                  "preBuiltAgentsModalCallout": true
                },
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759918723295
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-28",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}