{
  "createdAt": "2025-10-22T18:20:20.342Z",
  "updatedAt": "2025-10-25T23:29:18.243Z",
  "id": "U44ZfEwFU77EUthb",
  "name": "sw_send_message_with_retry",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "instanceName"
            },
            {
              "name": "remoteJid"
            },
            {
              "name": "messageText"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -176,
        416
      ],
      "id": "fd15f7b3-6477-4bb5-b267-43d1db4e062e",
      "name": "start"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.instanceName }}",
        "remoteJid": "={{ $('start').item.json.remoteJid }}",
        "messageText": "={{ $('start').item.json.messageText }}",
        "options_message": {
          "delay": 1200
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        64,
        416
      ],
      "id": "620706c4-f034-4cc3-9b3c-e65c0564a41c",
      "name": "Send Message",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first()?.json ?? {};\nconst data = response.data ?? {};\nconst statusRaw = String(data.status ?? response.status ?? 'UNKNOWN').toUpperCase();\nconst successFlags = new Set(['SUCCESS', 'SENT', 'DELIVERED', 'QUEUED', 'PENDING', 'ACCEPTED']);\nconst successRaw = String(response.success ?? '').trim().toLowerCase();\nconst success = response.success === true || successRaw === 'true' || successFlags.has(statusRaw);\nconst shouldRetry = !success;\nconst errorMessage = data.error ?? response.error ?? null;\n\nreturn [{\n  json: {\n    success,\n    status: statusRaw,\n    shouldRetry,\n    firstResponse: response,\n    lastResponse: response,\n    errorMessage\n  },\n  pairedItem: 0\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        304,
        416
      ],
      "id": "0b17bf7e-7015-4c44-8ab5-6af47ed44939",
      "name": "Check Initial"
    },
    {
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "leftValue": "={{ $json.shouldRetry }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and",
          "options": {
            "typeValidation": "strict",
            "version": 2
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        528,
        416
      ],
      "id": "07607416-3625-4238-a5e0-068bd6af563c",
      "name": "Should Retry?"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        784,
        288
      ],
      "id": "b0cbca8a-63c0-4bc7-b6b3-643b4bf44f1d",
      "name": "Retry Delay",
      "webhookId": "c70f06a7-7b09-46dc-9217-d26a00515d2d"
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('start').item.json.instanceName }}",
        "remoteJid": "={{ $('start').item.json.remoteJid }}",
        "messageText": "={{ $('start').item.json.messageText }}",
        "options_message": {
          "delay": 800
        }
      },
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        1024,
        288
      ],
      "id": "6728d14e-7aa6-440f-b1ff-01018f8c60dc",
      "name": "Send Message (retry)",
      "retryOnFail": true,
      "maxTries": 2,
      "waitBetweenTries": 3000,
      "credentials": {
        "evolutionApi": {
          "id": "H4gurJcNVV0yrS90",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const response = $input.first()?.json ?? {};\nconst data = response.data ?? {};\nconst statusRaw = String(data.status ?? response.status ?? 'UNKNOWN').toUpperCase();\nconst successFlags = new Set(['SUCCESS', 'SENT', 'DELIVERED', 'QUEUED', 'PENDING', 'ACCEPTED']);\nconst successRaw = String(response.success ?? '').trim().toLowerCase();\nconst success = response.success === true || successRaw === 'true' || successFlags.has(statusRaw);\nconst errorMessage = data.error ?? response.error ?? null;\nconst firstContext = $('Check Initial').first()?.json ?? {};\n\nreturn [{\n  json: {\n    success,\n    status: statusRaw,\n    shouldRetry: !success,\n    firstResponse: firstContext.firstResponse ?? firstContext,\n    lastResponse: response,\n    errorMessage\n  },\n  pairedItem: 0\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1232,
        288
      ],
      "id": "ecb49e6f-68a1-4262-a0b9-06dd40ca11d1",
      "name": "Check Retry"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1520,
        432
      ],
      "id": "9802177d-924d-4399-a526-16f593b8254d",
      "name": "No Operation, do nothing"
    }
  ],
  "connections": {
    "start": {
      "main": [
        [
          {
            "node": "Send Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message": {
      "main": [
        [
          {
            "node": "Check Initial",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Initial": {
      "main": [
        [
          {
            "node": "Should Retry?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Retry?": {
      "main": [
        [
          {
            "node": "Retry Delay",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry Delay": {
      "main": [
        [
          {
            "node": "Send Message (retry)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Message (retry)": {
      "main": [
        [
          {
            "node": "Check Retry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Retry": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "executionTimeout": 120
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "start": [
      {
        "json": {
          "instanceName": "MindQuest",
          "remoteJid": "351932786582@s.whatsapp.net",
          "messageText": "Aldo, essa sequência que você desenha soa bem estruturada e cheia de sentido para você. Primeiro cuidar do financeiro para aliviar o peso, depois se reconectar com seus filhos e diminuir a solidão, avançar nos negócios e só depois mergulhar no namoro e construir um relacionamento mais consciente.\n\nPercebo que cada passo parece abrir espaço para o próximo, como se fosse um caminho que vai cuidando de você em camadas, respeitando o tempo e a complexidade de cada área.\n\nO que você sente ao imaginar esses passos acontecendo, um de cada vez, com essa calma que você está buscando? Alguma parte disso que você antevê como maior desafio ou que te dá mais esperança? Quero sentir como essa jornada está se revelando pra você. "
        }
      }
    ]
  },
  "versionId": "5b44cb24-1e2e-4e5b-b189-2fc1cc0ae9a1",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-22T18:20:20.342Z",
      "updatedAt": "2025-10-22T18:20:20.342Z",
      "role": "workflow:owner",
      "workflowId": "U44ZfEwFU77EUthb",
      "projectId": "u1M57XAwIiLpPwjp",
      "project": {
        "createdAt": "2025-09-16T16:13:20.606Z",
        "updatedAt": "2025-09-25T16:38:18.729Z",
        "id": "u1M57XAwIiLpPwjp",
        "name": "Aldo Santos <lindualdo@hotmail.com>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2025-09-16T16:13:20.606Z",
            "updatedAt": "2025-09-16T16:13:20.606Z",
            "userId": "fa864d51-475e-4765-b3b4-12788525a3e6",
            "projectId": "u1M57XAwIiLpPwjp",
            "user": {
              "createdAt": "2025-09-16T16:13:20.056Z",
              "updatedAt": "2025-10-25T10:36:27.185Z",
              "id": "fa864d51-475e-4765-b3b4-12788525a3e6",
              "email": "lindualdo@hotmail.com",
              "firstName": "Aldo",
              "lastName": "Santos",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2025-09-16T16:22:10.583Z",
                "personalization_survey_n8n_version": "1.108.1"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "jUAvu7DUAzyqZhJd",
                "userActivatedAt": 1758041156747,
                "easyAIWorkflowOnboarded": true,
                "dismissedCallouts": {
                  "preBuiltAgentsModalCallout": true
                },
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1759918723295
                }
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-25",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "tags": []
}