{
  "name": "sw_expert_insights",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "usuario_id"
            },
            {
              "name": "mensagens"
            },
            {
              "name": "data_conversa"
            },
            {
              "name": "chat_id"
            },
            {
              "name": "usr_name"
            },
            {
              "name": "insight_id"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        120,
        160
      ],
      "id": "5164af23-c526-496c-973a-defc4d6e4101",
      "name": "start"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Analise a conversa completa abaixo e gere INSIGHTS acionáveis para o dashboard MindQuest.\n\n**CONVERSA COMPLETA:**\n```json\n{{ $json.mensagens }}\n```\n\nNome do usuário: {{ $json.name }}\n\n**TAREFA:**\n1. Identifique de 2 a 4 insights relevantes sobre o usuário com base SOMENTE na conversa.\n2. Para cada insight defina obrigatoriamente: tipo, categoria, prioridade, título curto e descrição clara com contexto e recomendação.\n\n**REGRAS:**\n- Tipos permitidos: padrao, alerta, positivo, melhoria.\n- Categorias permitidas: emocional, comportamental, social, cognitivo.\n- Prioridades permitidas: baixa, media, alta.\n- Use títulos objetivos (até 80 caracteres).\n- Nas descrições, cite evidências textuais e recomendações práticas.\n- Utilize o nome do usuário quando adequado; se não existir use 'Usuário'.\n- NÃO invente dados fora da conversa.\n- Responda apenas com o JSON estruturado solicitado.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Você é um especialista MindQuest em geração de insights emocionais e comportamentais. Analise as conversas e produza insights de qualidade que possam alimentar o dashboard. Siga estritamente os valores permitidos para tipo, categoria e prioridade. Retorne SEMPRE um JSON válido conforme o esquema fornecido.",
          "maxIterations": 3
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        360,
        160
      ],
      "id": "db6c7264-46f7-41b0-942f-54ff5adaec23",
      "name": "Analisador Insights"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"insights\": [\n    {\n      \"tipo\": \"padrao\",\n      \"categoria\": \"emocional\",\n      \"prioridade\": \"alta\",\n      \"titulo\": \"Padrão de solidão recorrente\",\n      \"descricao\": \"O usuário relata sensação de solidão ao final do dia e busca conectar-se mais com amigos. Recomende encontros regulares.\",\n      \"icone\": \"🔍\"\n    },\n    {\n      \"tipo\": \"positivo\",\n      \"categoria\": \"comportamental\",\n      \"prioridade\": \"media\",\n      \"titulo\": \"Disciplina em metas pessoais\",\n      \"descricao\": \"O usuário mantém rotinas estruturadas de trabalho e autocuidado. Reforce e celebre o progresso.\",\n      \"icone\": \"💪\"\n    }\n  ]\n}",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        488,
        392
      ],
      "id": "25202982-504a-44fc-b204-2e15521c5ff4",
      "name": "Parser JSON Insights"
    },
    {
      "parameters": {
        "options": {
          "maxTokens": 1200,
          "temperature": 0.2
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        320,
        512
      ],
      "id": "d4592c4d-4131-41f2-8d24-4a2b21bc9863",
      "name": "OpenRouter Claude",
      "credentials": {
        "openRouterApi": {
          "id": "rSnkOnnAHyfayLJt",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const startItem = $items(\"start\")[0]?.json || {};\nconst insights = Array.isArray($json.output?.insights) ? $json.output.insights : [];\nreturn insights.map((insight, index) => ({\n  json: {\n    usuario_id: startItem.usuario_id,\n    insight_id: startItem.insight_id || insight.id || null,\n    tipo: insight.tipo ?? 'padrao',\n    categoria: insight.categoria ?? 'emocional',\n    prioridade: insight.prioridade ?? 'media',\n    titulo: insight.titulo ?? `Insight ${index + 1}`,\n    descricao: insight.descricao ?? '',\n    icone: insight.icone ?? '💡'\n  }\n})).filter(item => item.json.usuario_id && item.json.titulo);\n"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 2.1,
      "position": [
        600,
        160
      ],
      "id": "082cd32a-212c-4c44-af3e-8ee5966a86ad",
      "name": "Preparar Insights"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO insights (\n  usuario_id,\n  tipo,\n  categoria,\n  titulo,\n  descricao,\n  icone,\n  prioridade\n)\nVALUES (\n  $1::uuid,\n  $2::varchar(20),\n  $3::varchar(20),\n  $4::varchar(150),\n  $5::text,\n  COALESCE(NULLIF($6::varchar(10), ''), '💡'),\n  $7::varchar(10)\n)\nRETURNING id, usuario_id, tipo, categoria, titulo, descricao, icone, prioridade, criado_em;",
        "options": {
          "queryReplacement": "=[\n  {{ $json.usuario_id }},\n  {{ $json.tipo }},\n  {{ $json.categoria }},\n  {{ $json.titulo }},\n  {{ $json.descricao }},\n  {{ $json.icone }},\n  {{ $json.prioridade }}\n]\n"
        }
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1.12,
      "position": [
        820,
        160
      ],
      "id": "b4e6b535-e199-4e41-9177-2a6d644c40c7",
      "name": "Gravar Insights"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1000,
        160
      ],
      "id": "b5234b35-7db6-4585-9a5d-51f2df610aa4",
      "name": "Saída"
    }
  ],
  "connections": {
    "start": {
      "main": [
        [
          {
            "node": "Analisador Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analisador Insights": {
      "main": [
        [
          {
            "node": "Preparar Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Insights": {
      "main": [
        [
          {
            "node": "Gravar Insights",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gravar Insights": {
      "main": [
        [
          {
            "node": "Saída",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parser JSON Insights": {
      "ai_outputParser": []
    },
    "OpenRouter Claude": {
      "ai_languageModel": [
        [
          {
            "node": "Analisador Insights",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Parser JSON Insights",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "aad9383f-d0f7-4efd-aeb8-b7414a3c89bf",
  "meta": {
    "instanceId": "8b04959d79052d9a4fde27fe8830b1f9748281331c826275aabfed3697b200b7"
  },
  "id": "insightsWorkflow",
  "tags": []
}